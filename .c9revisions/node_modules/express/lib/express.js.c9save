{"ts":1359004188328,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * Module dependencies.\n */\n\nvar connect = require('connect')\n  , proto = require('./application')\n  , Route = require('./router/route')\n  , Router = require('./router')\n  , req = require('./request')\n  , res = require('./response')\n  , utils = connect.utils;\n\n/**\n * Expose `createApplication()`.\n */\n\nexports = module.exports = createApplication;\n\n/**\n * Framework version.\n */\n\nexports.version = '3.0.5';\n\n/**\n * Expose mime.\n */\n\nexports.mime = connect.mime;\n\n/**\n * Create an express application.\n *\n * @return {Function}\n * @api public\n */\n\nfunction createApplication() {\n  var app = connect();\n  utils.merge(app, proto);\n  app.request = { __proto__: req };\n  app.response = { __proto__: res };\n  app.init();\n  return app;\n}\n\n/**\n * Expose connect.middleware as express.*\n * for example `express.logger` etc.\n */\n\nfor (var key in connect.middleware) {\n  Object.defineProperty(\n      exports\n    , key\n    , Object.getOwnPropertyDescriptor(connect.middleware, key));\n}\n\n/**\n * Error on createServer().\n */\n\nexports.createServer = function(){\n  console.warn('Warning: express.createServer() is deprecated, express');\n  console.warn('applications no longer inherit from http.Server,');\n  console.warn('please use:');\n  console.warn('');\n  console.warn('  var express = require(\"express\");');\n  console.warn('  var app = express();');\n  console.warn('');\n  return createApplication();\n};\n\n/**\n * Expose the prototypes.\n */\n\nexports.application = proto;\nexports.request = req;\nexports.response = res;\n\n/**\n * Expose constructors.\n */\n\nexports.Route = Route;\nexports.Router = Router;\n\n// Error handler title\n\nexports.errorHandler.title = 'Express';\n\n"]],"start1":0,"start2":0,"length1":0,"length2":1654}]],"length":1654}
